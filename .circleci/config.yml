# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
general:
    branches:
        ignore:
            - docker-image/*
jobs:

    build:
        docker:
            - image: docker:stable
        working_directory: ~/
        steps:
            - checkout
            - setup_remote_docker:
                docker_layer_caching: true

            - run:
                name: Run elasticsearch ^6.1
                command: |
                    docker run -d \
                        --name=apisearch.elasticsearch.6.1 \
                        -e "ES_JAVA_OPTS=-Xms256m -Xmx256m" \
                        -e "discovery.type=single-node" \
                        -e "action.auto_create_index=-apisearch*,+*" \
                        docker.elastic.co/elasticsearch/elasticsearch:6.1.4

            - run:
                name: Run elasticsearch ^6.6
                command: |
                    docker run -d \
                        --name=apisearch.elasticsearch.6.6 \
                        -e "ES_JAVA_OPTS=-Xms256m -Xmx256m" \
                        -e "discovery.type=single-node" \
                        -e "action.auto_create_index=-apisearch*,+*" \
                        docker.elastic.co/elasticsearch/elasticsearch:6.6.0

            - run:
                name: Run Redis
                command: |
                    docker run -d \
                        --name="apisearch.redis" \
                        redis:4-alpine \
                        redis-server

            - run:
                name: Run RabbitMQ
                command: |
                    docker run -d \
                        --name="apisearch.rabbitmq" \
                        rabbitmq:3-management-alpine

            - run:
                name: Build Apisearch
                command: |
                    docker build -t apisearch/server .

            - run:
                name: Run Apisearch in server mode
                command: |
                    docker run -d \
                        --name "apisearch.server" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch.6.1" \
                        --link "apisearch.elasticsearch.6.6" \
                        --link "apisearch.rabbitmq" \
                        -e "APISEARCH_GOD_TOKEN=0e4d75ba-c640-44c1-a745-06ee51db4e93" \
                        -e "APISEARCH_READONLY_TOKEN=410806ed-f2c2-8d22-96ea-7fb68026df34" \
                        -e "APISEARCH_PING_TOKEN=6326d504-0a5f-f1ae-7344-8e70b75fcde9" \
                        -e "APISEARCH_ENABLED_PLUGINS=redis_storage" \
                        -e "ELASTICSEARCH_HOST=apisearch.elasticsearch.6.6" \
                        -e "ELASTICSEARCH_PORT=9200" \
                        -e "ELASTICSEARCH_REFRESH_ON_WRITE=1" \
                        -e "REDIS_ELK_HOST=apisearch.redis" \
                        -e "REDIS_ELK_PORT=6379" \
                        -e "REDIS_STORAGE_HOST=apisearch.redis" \
                        -e "REDIS_STORAGE_PORT=6379" \
                        -e "REDIS_METADATA_FIELDS_HOST=apisearch.redis" \
                        -e "REDIS_METADATA_FIELDS_PORT=6379" \
                        apisearch/server \
                        sh /server-entrypoint.sh

            - run:
                name: Run Apisearch in commands consumer with Redis as queue plugin
                command: |
                    docker run -d \
                        --name "apisearch.commands_consumer_redis" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch.6.6" \
                        -e "APISEARCH_GOD_TOKEN=0e4d75ba-c640-44c1-a745-06ee51db4e93" \
                        -e "APISEARCH_READONLY_TOKEN=410806ed-f2c2-8d22-96ea-7fb68026df34" \
                        -e "APISEARCH_PING_TOKEN=6326d504-0a5f-f1ae-7344-8e70b75fcde9" \
                        -e "APISEARCH_ENABLED_PLUGINS=redis_queues,redis_storage" \
                        -e "APISEARCH_DOMAIN_EVENTS_ADAPTER=enqueue" \
                        -e "ELASTICSEARCH_HOST=apisearch.elasticsearch.6.6" \
                        -e "ELASTICSEARCH_PORT=9200" \
                        -e "ELASTICSEARCH_REFRESH_ON_WRITE=1" \
                        -e "REDIS_STORAGE_HOST=apisearch.redis" \
                        -e "REDIS_STORAGE_PORT=6379" \
                        -e "REDIS_QUEUE_HOST=apisearch.redis" \
                        -e "REDIS_QUEUE_PORT=6379" \
                        -e "REDIS_QUEUE_SECONDS_TO_WAIT_ON_BUSY=1" \
                        -e "REDIS_ELK_HOST=apisearch.redis" \
                        -e "REDIS_ELK_PORT=6379" \
                        -e "REDIS_METADATA_FIELDS_HOST=apisearch.redis" \
                        -e "REDIS_METADATA_FIELDS_PORT=6379" \
                        apisearch/server \
                        sh /commands-consumer-entrypoint.sh

            - run:
                name: Run Apisearch in domain events consumer mode with Redis as queue plugin
                command: |
                    docker run -d \
                        --name "apisearch.domain_events_consumer_redis" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch.6.6" \
                        -e "APISEARCH_GOD_TOKEN=0e4d75ba-c640-44c1-a745-06ee51db4e93" \
                        -e "APISEARCH_READONLY_TOKEN=410806ed-f2c2-8d22-96ea-7fb68026df34" \
                        -e "APISEARCH_PING_TOKEN=6326d504-0a5f-f1ae-7344-8e70b75fcde9" \
                        -e "APISEARCH_ENABLED_PLUGINS=redis_queues,redis_storage" \
                        -e "ELASTICSEARCH_HOST=apisearch.elasticsearch.6.6" \
                        -e "ELASTICSEARCH_PORT=9200" \
                        -e "ELASTICSEARCH_REFRESH_ON_WRITE=1" \
                        -e "REDIS_STORAGE_HOST=apisearch.redis" \
                        -e "REDIS_STORAGE_PORT=6379" \
                        -e "REDIS_QUEUE_HOST=apisearch.redis" \
                        -e "REDIS_QUEUE_PORT=6379" \
                        -e "REDIS_QUEUE_SECONDS_TO_WAIT_ON_BUSY=1" \
                        -e "REDIS_ELK_HOST=apisearch.redis" \
                        -e "REDIS_ELK_PORT=6379" \
                        -e "REDIS_METADATA_FIELDS_HOST=apisearch.redis" \
                        -e "REDIS_METADATA_FIELDS_PORT=6379" \
                        apisearch/server \
                        sh /domain-events-consumer-entrypoint.sh

            - run:
                name: Run Apisearch in commands consumer with Rabbitmq as queue plugin
                command: |
                    docker run -d \
                        --name "apisearch.commands_consumer_rabbitmq" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch.6.6" \
                        --link "apisearch.rabbitmq" \
                        -e "APISEARCH_GOD_TOKEN=0e4d75ba-c640-44c1-a745-06ee51db4e93" \
                        -e "APISEARCH_READONLY_TOKEN=410806ed-f2c2-8d22-96ea-7fb68026df34" \
                        -e "APISEARCH_PING_TOKEN=6326d504-0a5f-f1ae-7344-8e70b75fcde9" \
                        -e "APISEARCH_ENABLED_PLUGINS=rabbitmq,redis_storage" \
                        -e "APISEARCH_DOMAIN_EVENTS_ADAPTER=enqueue" \
                        -e "ELASTICSEARCH_HOST=apisearch.elasticsearch.6.6" \
                        -e "ELASTICSEARCH_PORT=9200" \
                        -e "ELASTICSEARCH_REFRESH_ON_WRITE=1" \
                        -e "REDIS_STORAGE_HOST=apisearch.redis" \
                        -e "REDIS_STORAGE_PORT=6379" \
                        -e "REDIS_ELK_HOST=apisearch.redis" \
                        -e "REDIS_ELK_PORT=6379" \
                        -e "REDIS_METADATA_FIELDS_HOST=apisearch.redis" \
                        -e "REDIS_METADATA_FIELDS_PORT=6379" \
                        -e "RABBITMQ_QUEUE_HOST=apisearch.rabbitmq" \
                        -e "RABBITMQ_QUEUE_PORT=5672" \
                        -e "RABBITMQ_QUEUE_USER=guest" \
                        -e "RABBITMQ_QUEUE_PASSWORD=guest" \
                        -e "RABBITMQ_QUEUE_VHOST=/" \
                        -e "RABBITMQ_QUEUE_SECONDS_TO_WAIT_ON_BUSY=1" \
                        apisearch/server \
                        sh /commands-consumer-entrypoint.sh

            - run:
                name: Run Apisearch in domain events consumer mode with Rabbitmq as queue plugin
                command: |
                    docker run -d \
                        --name "apisearch.domain_events_consumer_rabbitmq" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch.6.6" \
                        --link "apisearch.rabbitmq" \
                        -e "APISEARCH_GOD_TOKEN=0e4d75ba-c640-44c1-a745-06ee51db4e93" \
                        -e "APISEARCH_READONLY_TOKEN=410806ed-f2c2-8d22-96ea-7fb68026df34" \
                        -e "APISEARCH_PING_TOKEN=6326d504-0a5f-f1ae-7344-8e70b75fcde9" \
                        -e "APISEARCH_ENABLED_PLUGINS=rabbitmq,redis_storage" \
                        -e "ELASTICSEARCH_HOST=apisearch.elasticsearch.6.6" \
                        -e "ELASTICSEARCH_PORT=9200" \
                        -e "ELASTICSEARCH_REFRESH_ON_WRITE=1" \
                        -e "REDIS_STORAGE_HOST=apisearch.redis" \
                        -e "REDIS_STORAGE_PORT=6379" \
                        -e "REDIS_ELK_HOST=apisearch.redis" \
                        -e "REDIS_ELK_PORT=6379" \
                        -e "REDIS_METADATA_FIELDS_HOST=apisearch.redis" \
                        -e "REDIS_METADATA_FIELDS_PORT=6379" \
                        -e "RABBITMQ_QUEUE_HOST=apisearch.rabbitmq" \
                        -e "RABBITMQ_QUEUE_PORT=5672" \
                        -e "RABBITMQ_QUEUE_USER=guest" \
                        -e "RABBITMQ_QUEUE_PASSWORD=guest" \
                        -e "RABBITMQ_QUEUE_VHOST=/" \
                        -e "RABBITMQ_QUEUE_SECONDS_TO_WAIT_ON_BUSY=1" \
                        apisearch/server \
                        sh /domain-events-consumer-entrypoint.sh

            - run:
                name: Run tests
                command: |
                    docker logs apisearch.server
                    docker logs apisearch.commands_consumer_redis
                    docker logs apisearch.domain_events_consumer_redis
                    docker logs apisearch.commands_consumer_rabbitmq
                    docker logs apisearch.domain_events_consumer_rabbitmq
                    docker exec -it apisearch.server sh /var/www/apisearch/scripts/run-tests
